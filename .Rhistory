aes(x = exam, y = share, group = method_used, colour = method_used))
figure + geom_point(aes(shape = method_used), size = 3) +
geom_line(aes(linetype = method_used), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
scale_fill_discrete(name = "materials used", labels = c("A", "B", "C", "D", "E", "F")) +
labs(title = "Study material used in each group")
vector_of_methods <- c("used_script_digital", "used_script_physical", "used_textbook", "used_guideline",
"used_anki_institute", "used_anki_custom") # declare variables for line graph
#options ignored: moodle quiz, moodle task, other
subset_of_interest <- survey_data[c("exam", vector_of_methods)] # relevant subset of survey_data df
df_used_materials <- as.data.frame(matrix(nrow = length(groups), ncol = length(vector_of_methods)))
colnames(df_used_materials) <- vector_of_methods
rownames(df_used_materials) <- groups # creates df with columns for used studying methods and rows for groups
for (i in 1:length(vector_of_methods)){ # fill df with shares of material used by group
method <- vector_of_methods[i]
share_used_method <- aggregate(get(vector_of_methods[i]) ~ exam, data=subset_of_interest, mean, na.rm = TRUE) # gives share of students who used physical scripts per group and in total
share_used_method <- share_used_method[match(groups, share_used_method$exam),] # sort by group
df_used_materials[,i] <- share_used_method[, 2]
}
# convert data frame to long format to be usable in ggplot
df_used_materials <- cbind(exam = rownames(df_used_materials), df_used_materials) # create rownames as expressive data column
# rename methods for aesthetic plot labels
colnames(df_used_materials) <- c(
"exam", "Digital script", "Physical script", "Textbooks", "Guidelines", "Anki institute cards", "Anki own cards")
df_used_materials_reshaped <- reshape(data = df_used_materials,
direction = "long",
varying = list(names(df_used_materials)[-1]),
idvar = names(df_used_materials)[1],
times = names(df_used_materials)[-1],
timevar = "method_used",
v.names = "share")
#plot
figure <- ggplot(data = df_used_materials_reshaped,
aes(x = exam, y = share, group = method_used, colour = method_used))
figure + geom_point(aes(shape = method_used), size = 3) +
geom_line(aes(linetype = method_used), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
scale_fill_discrete(name = "materials used", labels = c("A", "B", "C", "D", "E", "F")) +
labs(title = "Study material used in each group")
vector_of_helpful_methods <- c("helpful_script", "helpful_video", "helpful_streaming", "helpful_contact_event",
"helpful_anki_institute", "helpful_anki_custom", "helpful_all_equally")
subset_of_interest_helpful <- survey_data[c("exam", vector_of_helpful_methods)]  # relevant subset of survey_data df
df_helpful_materials <- as.data.frame(matrix(nrow = length(groups), ncol = length(vector_of_helpful_methods)))
colnames(df_helpful_materials) <- vector_of_helpful_methods
rownames(df_helpful_materials) <- groups # creates df with columns for used studying methods and rows for groups
for (i in 1:length(vector_of_helpful_methods)){ # fill df with shares of material used by group
method <- vector_of_helpful_methods[i]
share_helpful_method <- aggregate(get(vector_of_helpful_methods[i]) ~ exam, data=subset_of_interest_helpful, mean, na.rm = TRUE) # gives share of students who used physical scripts per group and in total
share_helpful_method <- share_helpful_method[match(groups, share_helpful_method$exam),] # sort by group
df_helpful_materials[,i] <- share_helpful_method[, 2]
}
# convert data frame to long format to be usable in ggplot
df_helpful_materials <- cbind(exam = rownames(df_helpful_materials), df_helpful_materials) # create rownames as expressive data column
# rename methods for aesthetic plot labels
colnames(df_helpful_materials) <- c("exam", "Scripts", "Videos of lectures and seminars",
"live-streamed casts", "Contact events", "Anki institute cards", "Anki own cards",
"All equally useful")
df_helpful_materials_reshaped <- reshape(data = df_helpful_materials,
direction = "long",
varying = list(names(df_helpful_materials)[-1]),
idvar = names(df_helpful_materials)[1],
times = names(df_helpful_materials)[-1],
timevar = "method_helpful",
v.names = "share")
figure <- ggplot(data = df_helpful_materials_reshaped,
aes(x = exam, y = share, group = method_helpful, colour = method_helpful))
figure + geom_point(aes(shape = method_helpful), size = 3) +
geom_line(aes(linetype = method_helpful), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
geom_line(aes(linetype = method_helpful), size = 2) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 22", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
theme_bw()
figure <- ggplot(data = df_helpful_materials_reshaped,
aes(x = exam, y = share, group = method_helpful, colour = method_helpful))
figure + geom_point(aes(shape = method_helpful), size = 3) +
geom_line(aes(linetype = method_helpful), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
geom_line(aes(linetype = method_helpful), size = 2) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 22", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
theme_bw()
figure + geom_point(aes(shape = method_helpful), size = 3) +
geom_line(aes(linetype = method_helpful), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
geom_line(aes(linetype = method_helpful), size = 2) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 22", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
theme_bw()
+labs(linetype="xyz")
+labs(shape="xyz")
figure + geom_point(aes(shape = method_helpful), size = 3) +
geom_line(aes(linetype = method_helpful), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
geom_line(aes(linetype = method_helpful), size = 2) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 22", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
theme_bw() + labs(shape="xyz")
figure + geom_point(aes(shape = method_helpful), size = 3) +
geom_line(aes(linetype = method_helpful), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
geom_line(aes(linetype = method_helpful), size = 2) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 22", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
theme_bw() + labs(type="xyz")
figure + geom_point(aes(shape = method_helpful), size = 3) +
geom_line(aes(linetype = method_helpful), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
geom_line(aes(linetype = method_helpful), size = 2) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 22", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
theme_bw() + guides(color=guide_legend("my title"))
?labs
figure + geom_point(aes(shape = method_helpful), size = 3) +
geom_line(aes(linetype = method_helpful), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
geom_line(aes(linetype = method_helpful), size = 2) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 22", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
theme_bw() + guides(linetype=guide_legend(title="New Legend Title"),
color=guide_legend(title=""))
figure <- ggplot(data = df_helpful_materials_reshaped,
aes(x = exam, y = share, group = method_helpful, colour = method_helpful))
figure + geom_point(aes(shape = method_helpful), size = 3) +
geom_line(aes(linetype = method_helpful), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
geom_line(aes(linetype = method_helpful), size = 2) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 22", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
theme_bw() + guides(linetype=guide_legend(title="New Legend Title"),
color=guide_legend(title=""))
figure <- ggplot(data = df_helpful_materials_reshaped,
aes(x = exam, y = share, group = method_helpful, colour = method_helpful))
figure + geom_point(aes(shape = method_helpful), size = 3) +
geom_line(aes(linetype = method_helpful), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
geom_line(aes(linetype = method_helpful), size = 2) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 22", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
theme_bw()
figure <- ggplot(data = df_helpful_materials_reshaped,
aes(x = exam, y = share, group = method_helpful, colour = method_helpful))
figure + geom_point(aes(shape = method_helpful), size = 3) +
geom_line(aes(linetype = method_helpful), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
geom_line(aes(linetype = method_helpful), size = 2) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 22", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
theme_bw() +guides(linetype=guide_legend(title="New Legend Title"),
color=guide_legend(title=""))
figure <- ggplot(data = df_helpful_materials_reshaped,
aes(x = exam, y = share, group = method_helpful, colour = method_helpful))
figure + geom_point(aes(shape = method_helpful), size = 3) +
geom_line(aes(linetype = method_helpful), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
geom_line(aes(linetype = method_helpful), size = 2) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 22", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
theme_bw() +guides(linetype=guide_legend(title="New Legend Title"))
figure <- ggplot(data = df_helpful_materials_reshaped,
aes(x = exam, y = share, group = method_helpful, colour = method_helpful))
figure + geom_point(aes(shape = method_helpful), size = 3) +
geom_line(aes(linetype = method_helpful), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
geom_line(aes(linetype = method_helpful), size = 2) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 22", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
theme_bw() +guides(linetype=color=guide_legend(title="New Legend Title"))
figure <- ggplot(data = df_helpful_materials_reshaped,
aes(x = exam, y = share, group = method_helpful, colour = method_helpful))
figure + geom_point(aes(shape = method_helpful), size = 3)
figure <- ggplot(data = df_helpful_materials_reshaped,
aes(x = exam, y = share, group = method_helpful, colour = method_helpful))
figure + geom_point(aes(shape = method_helpful), size = 3) +
geom_line(aes(linetype = method_helpful), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
theme_bw()
figure <- ggplot(data = df_helpful_materials_reshaped,
aes(x = exam, y = share, group = method_helpful, colour = method_helpful))
figure + geom_point(aes(shape = method_helpful), size = 3) +
geom_line(aes(linetype = method_helpful), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
theme_bw() +guides(linetype=guide_legend(title="New Legend Title"),
color=guide_legend(title=""))
figure <- ggplot(data = df_helpful_materials_reshaped,
aes(x = exam, y = share, group = method_helpful, colour = method_helpful))
figure + geom_point(aes(shape = method_helpful), size = 3) +
geom_line(aes(linetype = method_helpful), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
theme_bw() +guides(colour=guide_legend(title="New Legend Title"))
figure + geom_point(aes(shape = method_helpful), size = 3) +
geom_line(aes(linetype = method_helpful), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
theme_bw() +labs(colour=guide_legend(title="New Legend Title"))
figure <- ggplot(data = df_helpful_materials_reshaped,
aes(x = exam, y = share, group = method_helpful, colour = method_helpful))
figure + geom_point(aes(shape = method_helpful), size = 3) +
geom_line(aes(linetype = method_helpful), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
theme_bw() +labs(colour=guide_legend(title="New Legend Title"))
figure + geom_point(aes(shape = method_helpful), size = 3) +
geom_line(aes(linetype = method_helpful), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
theme_bw() +labs(colour="New Legend Title")
figure <- ggplot(data = df_helpful_materials_reshaped,
aes(x = exam, y = share, group = method_helpful, colour = method_helpful))
figure + geom_point(aes(shape = method_helpful), size = 3) +
geom_line(aes(linetype = method_helpful), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
theme_bw() +labs(color = "Legend title", shape = "Legend Title")
mtcars
Library(ggplot2 )
library(ggpmisc)
mtcars
Library(ggplot2 )
mtcars
library(ggplot2 )
formula <- y~x
ggplot(mtcars, aes(disp, drat, col=factor(cyl), shape=factor(cyl))) +
geom_point() +
geom_smooth(method = "lm",formula = formula) +
scale_color_manual(values=c("#000000", "#E69F00", "#56B4E9")) +
theme_bw() +
stat_poly_eq(
aes(label = paste(stat(adj.rr.label), stat(p.value.label), sep = "*\", \"*")),
formula = formula, parse = TRUE, size=3)
install.packages("ggpmisc")
library(ggpmisc)
ggplot(mtcars, aes(disp, drat, col=factor(cyl), shape=factor(cyl))) +
geom_point() +
geom_smooth(method = "lm",formula = formula) +
scale_color_manual(values=c("#000000", "#E69F00", "#56B4E9")) +
theme_bw() +
stat_poly_eq(
aes(label = paste(stat(adj.rr.label), stat(p.value.label), sep = "*\", \"*")),
formula = formula, parse = TRUE, size=3)
ggplot(mtcars, aes(disp, drat, col=factor(cyl), shape=factor(cyl))) +
geom_point() +
geom_smooth(method = "lm",formula = formula) +
scale_color_manual(values=c("#000000", "#E69F00", "#56B4E9")) +
theme_bw() +
stat_poly_eq(
aes(label = paste(stat(adj.rr.label), stat(p.value.label), sep = "*\", \"*")),
formula = formula, parse = TRUE, size=3) +
labs(color = "Legend title", shape = "Legend Title")
ggplot(mtcars, aes(disp, drat, col=factor(cyl), shape=factor(cyl))) +
geom_point() +
geom_smooth(method = "lm",formula = formula) +
scale_color_manual(values=c("#000000", "#E69F00", "#56B4E9")) +
theme_bw() +
stat_poly_eq(
aes(label = paste(stat(adj.rr.label), stat(p.value.label), sep = "*\", \"*")),
formula = formula, parse = TRUE, size=3)
ggplot(mtcars, aes(disp, drat, col=factor(cyl), shape=factor(cyl))) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
scale_color_manual(values=c("#000000", "#E69F00", "#56B4E9")) +
theme_bw() +
stat_poly_eq(
aes(label = paste(stat(adj.rr.label), stat(p.value.label), sep = "*\", \"*")),
formula = formula, parse = TRUE, size=3) +
labs(color = "my_title", shape = "my_title")
ggplot(mtcars, aes(disp, drat, col=factor(cyl), shape=factor(cyl))) +
geom_point() +
geom_smooth(method = "lm",formula = formula) +
scale_color_manual(values=c("#000000", "#E69F00", "#56B4E9")) +
theme_bw() +
stat_poly_eq(
aes(label = paste(stat(adj.rr.label), stat(p.value.label), sep = "*\", \"*")),
formula = formula, parse = TRUE, size=3) +
labs(color = "Legend title", shape = "Legend Title")
ggplot(mtcars, aes(disp, drat, col=factor(cyl), shape=factor(cyl))) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
scale_color_manual(values=c("#000000", "#E69F00", "#56B4E9")) +
theme_bw() +
stat_poly_eq(
aes(label = paste(stat(adj.rr.label), stat(p.value.label), sep = "*\", \"*")),
formula = formula, parse = TRUE, size=3) +
labs(color = "my_title", shape = "my_title")
figure <- ggplot(data = df_helpful_materials_reshaped,
aes(x = exam, y = share, group = method_helpful, colour = method_helpful))
figure + geom_point(aes(shape = method_helpful), size = 3) +
geom_line(aes(linetype = method_helpful), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
theme_bw() +labs(color = "Legend Title", shape = "Legend Title")
figure <- ggplot(data = df_helpful_materials_reshaped,
aes(x = exam, y = share, group = method_helpful, colour = method_helpful))
figure + geom_point(aes(shape = method_helpful), size = 3) +
geom_line(aes(linetype = method_helpful), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
theme_bw() +labs(color = "Legend Title", shape = "Legend Title", linetype = "Legend Title")
#plot
figure <- ggplot(data = df_used_materials_reshaped,
aes(x = exam, y = share, group = method_used, colour = method_used))
figure + geom_point(aes(shape = method_used), size = 3) +
geom_line(aes(linetype = method_used), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
scale_fill_discrete(name = "materials used", labels = c("A", "B", "C", "D", "E", "F")) +
labs(title = "Study material used in each group")
#plot
figure <- ggplot(data = df_used_materials_reshaped,
aes(x = exam, y = share, group = method_used, colour = method_used))
figure + geom_point(aes(shape = method_used), size = 3) +
geom_line(aes(linetype = method_used), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
scale_fill_discrete(name = "materials used", labels = c("A", "B", "C", "D", "E", "F")) +
labs(title = "Study material used in each group")
figure <- ggplot(data = df_helpful_materials_reshaped,
aes(x = exam, y = share, group = method_helpful, colour = method_helpful))
figure + geom_point(aes(shape = method_helpful), size = 3) +
geom_line(aes(linetype = method_helpful), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
theme_bw() +labs(color = "Methods considered helpful",
shape = "Methods considered helpful",
linetype = "Methods considered helpful")
figure <- ggplot(data = df_helpful_materials_reshaped,
aes(x = exam, y = share, group = method_helpful, colour = method_helpful))
figure + geom_point(aes(shape = method_helpful), size = 3) +
geom_line(aes(linetype = method_helpful), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
theme_bw() +labs(title = "title",
color = "Methods considered helpful",
shape = "Methods considered helpful",
linetype = "Methods considered helpful")
figure <- ggplot(data = df_helpful_materials_reshaped,
aes(x = exam, y = share, group = method_helpful, colour = method_helpful))
figure + geom_point(aes(shape = method_helpful), size = 3) +
geom_line(aes(linetype = method_helpful), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
theme_bw() +labs(title = "Methods considered useful by group",
color = "Methods considered helpful",
shape = "Methods considered helpful",
linetype = "Methods considered helpful")
#plot
figure <- ggplot(data = df_used_materials_reshaped,
aes(x = exam, y = share, group = method_used, colour = method_used))
figure + geom_point(aes(shape = method_used), size = 3) +
geom_line(aes(linetype = method_used), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
theme_bw() +labs(title = "Methods used",
color = "Methods used",
shape = "Methods used",
linetype = "Methods used")
#plot
figure <- ggplot(data = df_used_materials_reshaped,
aes(x = exam, y = share, group = method_used, colour = method_used))
figure + geom_point(aes(shape = method_used), size = 3) +
geom_line(aes(linetype = method_used), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
theme_bw() +labs(title = "Methods used by group",
color = "Methods used",
shape = "Methods used",
linetype = "Methods used",
x = "Exam",
y = "Share")
figure <- ggplot(data = df_helpful_materials_reshaped,
aes(x = exam, y = share, group = method_helpful, colour = method_helpful))
figure + geom_point(aes(shape = method_helpful), size = 3) +
geom_line(aes(linetype = method_helpful), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
theme_bw() +labs(title = "Methods considered useful by group",
color = "Methods considered helpful",
shape = "Methods considered helpful",
linetype = "Methods considered helpful",
x = "Exam",
y = "Share")
# rename methods for aesthetic plot labels
colnames(df_helpful_materials) <- c("exam", "Scripts", "Videos of lectures and seminars",
"Live-streamed casts", "Contact events", "Anki institute cards", "Anki own cards",
"All equally useful")
df_helpful_materials_reshaped <- reshape(data = df_helpful_materials,
direction = "long",
varying = list(names(df_helpful_materials)[-1]),
idvar = names(df_helpful_materials)[1],
times = names(df_helpful_materials)[-1],
timevar = "method_helpful",
v.names = "share")
figure <- ggplot(data = df_helpful_materials_reshaped,
aes(x = exam, y = share, group = method_helpful, colour = method_helpful))
figure + geom_point(aes(shape = method_helpful), size = 3) +
geom_line(aes(linetype = method_helpful), linewidth = 2, ) +
scale_x_discrete(limits = groups, name = "exam",
labels = c("Seminar 2022", "Lecture 2022", "Seminar 2022/23", "Lecture 2022/23", "Seminar 2023")) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
theme_bw() +labs(title = "Methods considered useful by group",
color = "Methods considered helpful",
shape = "Methods considered helpful",
linetype = "Methods considered helpful",
x = "Exam",
y = "Share")
count_anki_helpful_and_used_general <- rowsum(as.numeric(survey_data$used_anki_general == 1 &
survey_data$helpful_anki_general == 1),
group = factor(survey_data$group, levels = unique(survey_data$group)), na.rm = T)
View(survey_data)
count_anki_helpful_and_used_general <- rowsum(as.numeric(survey_data$used_anki_institute == 1 &
survey_data$helpful_anki_institute == 1),
group = factor(survey_data$group, levels = unique(survey_data$group)), na.rm = T)
count_anki_helpful_and_used_general <- rowsum(as.numeric(survey_data$used_anki_institute == 1 &
survey_data$helpful_anki_institute == 1),
group = factor(survey_data$group, levels = unique(survey_data$exam)), na.rm = T)
count_anki_helpful_and_used_general <- rowsum(as.numeric(survey_data$used_anki_institute == 1 &
survey_data$helpful_anki_institute == 1),
group = factor(survey_data$exam, levels = unique(survey_data$exam)), na.rm = T)
count_anki_helpful_and_used_general
count_anki_helpful_and_used_general <- rowsum(as.numeric(survey_data$used_anki_institute == 1 &
survey_data$helpful_anki_institute == 1),
group = factor(survey_data$exam, levels = unique(survey_data$exam)), na.rm = T)
count_anki_not_helpful_and_used_general <- rowsum(as.numeric(survey_data$used_anki_general == 1 &
survey_data$helpful_anki_general == 2),
group = factor(survey_data$group, levels = unique(survey_data$group)), na.rm = T)
students_per_group
count_anki_helpful_and_used_general <- rowsum(as.numeric(survey_data$used_anki_institute == 1 &
survey_data$helpful_anki_institute == 1),
group = factor(survey_data$exam, levels = unique(survey_data$exam)), na.rm = T)
count_anki_helpful_and_used_general <- rowsum(as.numeric(survey_data$used_anki_institute == 1 &
survey_data$helpful_anki_institute == 1),
group = factor(survey_data$exam, levels = unique(survey_data$exam)), na.rm = T)
count_anki_not_helpful_and_used_general <- rowsum(as.numeric(survey_data$used_anki_institute == 1 &
survey_data$helpful_anki_institute == 2),
group = factor(survey_data$exam, levels = unique(survey_data$exam)), na.rm = T)
count_anki_not_helpful_and_used_general
count_anki_helpful_and_used_general
count_anki_helpful_and_used_general <- rowsum(as.numeric(survey_data$used_anki_institute == 1 &),
count_anki_helpful_and_used_general <- rowsum(as.numeric(survey_data$used_anki_institute == 1 &),
count_anki_helpful_and_used_general <- rowsum(as.numeric(survey_data$used_anki_institute == 1 &),
count_anki_helpful_and_used_general <- rowsum(as.numeric(survey_data$used_anki_institute == 1),
group = factor(survey_data$exam, levels = unique(survey_data$exam)), na.rm = T)
count_anki_helpful_and_used_general
count_anki_helpful_and_used_general / students_per_group
count_anki_helpful_and_used_general <- rowsum(as.numeric(survey_data$used_anki_institute_general == 1),
group = factor(survey_data$exam, levels = unique(survey_data$exam)), na.rm = T)
count_anki_helpful_and_used_general
count_anki_helpful_and_used_general
rowsum(as.numeric(survey_data$used_anki_institute == 1),
group = factor(survey_data$exam, levels = unique(survey_data$exam)), na.rm = T)
rowsum(as.numeric(survey_data$used_anki_institute_general == 1),
group = factor(survey_data$exam, levels = unique(survey_data$exam)), na.rm = T)
